[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "mac-address-changer"
version = "1.0.0"
description = "A Python tool for changing MAC addresses on network interfaces"
readme = "README.md"
requires-python = ">=3.8"
license = { text = "MIT" }
authors = [{ name = "Thomas Juul Dyhr", email = "thomas@dyhr.com" }]
keywords = [
    "mac",
    "address",
    "changer",
    "network",
    "interface",
    "ifconfig",
    "security",
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: System Administrators",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: POSIX :: Linux",
    "Operating System :: MacOS",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: System :: Networking",
    "Topic :: System :: Systems Administration",
    "Topic :: Security",
]
dependencies = []

[project.optional-dependencies]
dev = [
    "black>=22.0.0",
    "flake8>=4.0.0",
    "mypy>=0.950",
    "pytest>=7.0.0",
    "pytest-cov>=3.0.0",
    "bandit>=1.7.0",
    "safety>=2.0.0",
    "pre-commit>=2.20.0",
]
test = ["pytest>=7.0.0", "pytest-cov>=3.0.0", "pytest-mock>=3.10.0"]
docs = ["sphinx>=4.0.0", "sphinx-rtd-theme>=1.0.0"]

[project.scripts]
mac-changer = "mac_changer:main"

[project.urls]
"Homepage" = "https://github.com/yourusername/mac_changer"
"Bug Reports" = "https://github.com/yourusername/mac_changer/issues"
"Source" = "https://github.com/yourusername/mac_changer"
"Documentation" = "https://github.com/yourusername/mac_changer/blob/main/README.md"

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | archive
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["mac_changer"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true
show_column_numbers = true
show_error_context = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["test_mac_changer.py"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["mac_changer"]
omit = ["*/tests/*", "*/test_*", "archive/*", "setup.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
show_missing = true
skip_covered = false

[tool.coverage.html]
directory = "htmlcov"

[tool.bandit]
exclude_dirs = ["archive", ".venv", "__pycache__"]
skips = ["B101"]                                   # Skip assert_used test

[tool.pylint.messages_control]
disable = [
    "C0103", # invalid-name
    "C0114", # missing-module-docstring
    "R0903", # too-few-public-methods
    "W0613", # unused-argument
]

[tool.pylint.format]
max-line-length = 88

[tool.pylint.basic]
good-names = [
    "i",
    "j",
    "k",
    "ex",
    "Run",
    "_",
    "fd",
    "fp",
    "os",
    "re",
    "subprocess",
]

[tool.setuptools]
py-modules = ["mac_changer"]

[tool.setuptools.packages.find]
where = ["."]
include = ["mac_changer*"]
exclude = ["archive*", "tests*"]
